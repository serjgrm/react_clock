{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","className","this","props","name","today","toUTCString","slice","PureComponent","App","intervalName","intervalTime","state","Date","clockName","hasClock","setInterval","oldName","newName","value","now","toString","getRandomName","console","debug","setState","info","document","addEventListener","event","preventDefault","clearInterval","React","Component","ReactDOM","render","getElementById"],"mappings":"8MAOaA,EAAb,4JACE,WACE,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGC,KAAKC,MAAMC,OAGb,YAED,sBAAMH,UAAU,cAAhB,SACGC,KAAKC,MAAME,MAAMC,cAAcC,OAAO,IAAK,YAXtD,GAA2BC,iB,MCSpB,IAAMC,EAAb,4MACUC,aAAsC,KADhD,EAGUC,aAAsC,KAHhD,EAKEC,MAAkB,CAChBP,MAAO,IAAIQ,KACXC,UAAW,UACXC,UAAU,GARd,uDAWE,WAAqB,IAAD,OAClBb,KAAKQ,aAAeM,aAAY,WAC9B,IAAMC,EAAU,EAAKL,MAAME,UACrBI,EA1BZ,WACE,IAAMC,EAAQN,KAAKO,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAuBIG,GAGhBC,QAAQC,MAAR,uBAA8BP,EAA9B,eAA4CC,IAE5C,EAAKO,SAAS,CAAEX,UAAWI,MAC1B,MAEHhB,KAAKS,aAAeK,aAAY,WAC9B,EAAKS,SAAS,CAAEpB,MAAO,IAAIQ,OAEvB,EAAKD,MAAMG,UAEbQ,QAAQG,KAAK,EAAKd,MAAMP,MAAMC,cAAcC,OAAO,IAAK,MAEzD,KAEHoB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKL,SAAS,CAAEV,UAAU,OAG5BY,SAASC,iBAAiB,SAAS,WACjC,EAAKH,SAAS,CAAEV,UAAU,SArChC,kCAyCE,WACMb,KAAKQ,cACPqB,cAAc7B,KAAKQ,cAGjBR,KAAKS,cACPoB,cAAc7B,KAAKS,gBA/CzB,oBAmDE,WACE,MAAuCT,KAAKU,MAApCE,EAAR,EAAQA,UAAWT,EAAnB,EAAmBA,MAAOU,EAA1B,EAA0BA,SAE1B,OACE,sBAAKd,UAAU,MAAf,UACE,6CAECc,GACC,cAAC,EAAD,CAAOX,KAAMU,EAAWT,MAAOA,WA3DzC,GAAyB2B,IAAMC,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.a028cbfd.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ntype Props = {\n  name: string,\n  today: Date\n};\n\nexport class Clock extends PureComponent<Props> {\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.props.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  today: Date;\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  private intervalName: NodeJS.Timeout | null = null;\n\n  private intervalTime: NodeJS.Timeout | null = null;\n\n  state: AppState = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    this.intervalName = setInterval(() => {\n      const oldName = this.state.clockName;\n      const newName = getRandomName();\n\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${oldName} to ${newName}`);\n\n      this.setState({ clockName: newName });\n    }, 3300);\n\n    this.intervalTime = setInterval(() => {\n      this.setState({ today: new Date() });\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(this.state.today.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.intervalName) {\n      clearInterval(this.intervalName);\n    }\n\n    if (this.intervalTime) {\n      clearInterval(this.intervalTime);\n    }\n  }\n\n  render() {\n    const { clockName, today, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} today={today} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}