{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","PureComponent","getRandomName","value","now","toString","App","intervalName","intervalTime","clockName","hasClock","document","addEventListener","event","preventDefault","React","Component","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAlBpE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,WAvB9B,oBA0BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAMS,cAAcC,OAAO,IAAK,YAtC3C,GAA2BO,iB,MCN3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACUC,aAAsC,KADhD,EAGUC,aAAsC,KAHhD,EAKEzB,MAAkB,CAChB0B,UAAW,UACXC,UAAU,GAPd,uDAUE,WAAqB,IAAD,OAClBvB,KAAKoB,aAAelB,aAAY,WAC9B,EAAKC,SAAS,CAAEmB,UAAWP,QAC1B,MAEHS,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEoB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEoB,UAAU,SArBhC,kCAyBE,WACMvB,KAAKoB,cACPR,cAAcZ,KAAKoB,cAGjBpB,KAAKqB,cACPT,cAAcZ,KAAKqB,gBA/BzB,oBAmCE,WACE,MAAgCrB,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKV,UAAU,MAAf,UACE,6CAECU,GACC,cAAC,EAAD,CAAOd,KAAMa,WA3CvB,GAAyBM,IAAMC,WCZ/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.1b281cb7.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ninterface State {\n  today: Date,\n}\n\ninterface Props {\n  name: string,\n}\n\nexport class Clock extends PureComponent<Props> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  private intervalName: NodeJS.Timeout | null = null;\n\n  private intervalTime: NodeJS.Timeout | null = null;\n\n  state: AppState = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    this.intervalName = setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.intervalName) {\n      clearInterval(this.intervalName);\n    }\n\n    if (this.intervalTime) {\n      clearInterval(this.intervalTime);\n    }\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}